{"version":3,"sources":["animation.js"],"names":["EasingFunctions","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":";;;OAwCO,MAAMA,gBAAkB,CAE9BC,OAAQC,GAAKA,EAEbC,WAAYD,GAAKA,EAAEA,EAEnBE,YAAaF,GAAKA,GAAG,EAAEA,GAEvBG,cAAeH,GAAKA,EAAE,GAAK,EAAEA,EAAEA,GAAQ,EAAE,EAAEA,GAAGA,EAAV,EAEpCI,YAAaJ,GAAKA,EAAEA,EAAEA,EAEtBK,aAAcL,KAAQA,EAAGA,EAAEA,EAAE,EAE7BM,eAAgBN,GAAKA,EAAE,GAAK,EAAEA,EAAEA,EAAEA,GAAKA,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEA,EAAE,GAAG,EAE5DO,YAAaP,GAAKA,EAAEA,EAAEA,EAAEA,EAExBQ,aAAcR,GAAK,KAAKA,EAAGA,EAAEA,EAAEA,EAE/BS,eAAgBT,GAAKA,EAAE,GAAK,EAAEA,EAAEA,EAAEA,EAAEA,EAAI,EAAE,IAAKA,EAAGA,EAAEA,EAAEA,EAEtDU,YAAaV,GAAKA,EAAEA,EAAEA,EAAEA,EAAEA,EAE1BW,aAAcX,GAAK,IAAKA,EAAGA,EAAEA,EAAEA,EAAEA,EAEjCY,eAAgBZ,GAAKA,EAAE,GAAK,GAAGA,EAAEA,EAAEA,EAAEA,EAAEA,EAAI,EAAE,KAAMA,EAAGA,EAAEA,EAAEA,EAAEA","file":"animation.js","sourcesContent":["/*!\n * Module Animation\n */\n\n/**\n * @namespace Animation\n */\n\n\n\n/**\n * @namespace Animation:EasingFunctions\n */\n\n/**\n * A collection of all basic easing functions to be used in animations.\n * All functions here take a float parameter between 0 and 1 and return a mapped value between 0 and 1.\n *\n * Taken from: https://gist.github.com/gre/1650294\n *\n * Available functions:\n * - linear\n * - easeInQuad\n * - easeOutQuad\n * - easeInOutQuad\n * - easeInCubic\n * - easeOutCubic\n * - easeInOutCubic\n * - easeInQuart\n * - easeOutQuart\n * - easeInOutQuart\n * - easeInQuint\n * - easeOutQuint\n * - easeInOutQuint\n *\n * @memberof Animation:EasingFunctions\n * @name EasingFunctions\n * @example\n * scrollTo(window, 1000, 0, EasingFunctions.easeInOutQuint);\n */\nexport const EasingFunctions = {\n\t// no easing, no acceleration\n\tlinear: t => t,\n\t// accelerating from zero velocity\n\teaseInQuad: t => t*t,\n\t// decelerating to zero velocity\n\teaseOutQuad: t => t*(2-t),\n\t// acceleration until halfway, then deceleration\n\teaseInOutQuad: t => t<.5 ? 2*t*t : -1+(4-2*t)*t,\n\t// accelerating from zero velocity\n\teaseInCubic: t => t*t*t,\n\t// decelerating to zero velocity\n\teaseOutCubic: t => (--t)*t*t+1,\n\t// acceleration until halfway, then deceleration\n\teaseInOutCubic: t => t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1,\n\t// accelerating from zero velocity\n\teaseInQuart: t => t*t*t*t,\n\t// decelerating to zero velocity\n\teaseOutQuart: t => 1-(--t)*t*t*t,\n\t// acceleration until halfway, then deceleration\n\teaseInOutQuart: t => t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t,\n\t// accelerating from zero velocity\n\teaseInQuint: t => t*t*t*t*t,\n\t// decelerating to zero velocity\n\teaseOutQuint: t => 1+(--t)*t*t*t*t,\n\t// acceleration until halfway, then deceleration\n\teaseInOutQuint: t => t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t\n};\n"]}