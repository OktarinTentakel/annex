/*!
 * annex v0.1.0-dev
 */
/*!
 * Module Images
 */
const MODULE_NAME="Images";import{orDefault,isA,isPlainObject,assert,isEmpty,hasValue,Deferred}from"./basic.js";import{waitForRepaint}from"./timers.js";const PRELOADED_IMAGES={unnamed:[],named:{}};export function preload(e){const r=[],t=new Deferred;let n;if(!isPlainObject(e)&&!isA(e,"array")){if(e=`${e}`,hasValue(PRELOADED_IMAGES.named[e]))return PRELOADED_IMAGES.named[e];e=[e]}return isPlainObject(e)?(n={},Object.entries(e).forEach((([e,t])=>{e=`${e}`,t=`${t}`,hasValue(PRELOADED_IMAGES.named[e])||(n[e]=new Image,n[e].src=t,r.push(n[e]))})),PRELOADED_IMAGES.named={...PRELOADED_IMAGES.named,...n}):isA(e,"array")&&(n=[],e.forEach((e=>{const t=new Image;t.src=`${e}`,n.push(t),r.push(t)})),PRELOADED_IMAGES.unnamed=Array.from(new Set(PRELOADED_IMAGES.unnamed.concat(n)))),t.provision=isA(n,"array")&&1===n.length?n[0]:n,loaded(r).then(t.resolve).catch(t.reject),t}export function loaded(e,r=!1){const t=loaded.name;function n(t){const m=t.currentTarget;!r||r&&m.naturalWidth>0?(i--,i<=0&&(e.map((e=>{e.removeEventListener("load",n),e.removeEventListener("error",o)})),s.map((e=>{e.removeEventListener("load",n),e.removeEventListener("error",o)})),a.resolve(1===e.length?e[0]:e))):waitForRepaint((()=>{n(t)}))}function o(r){e.map((e=>{e.removeEventListener("load",n),e.removeEventListener("error",o)})),s.map((e=>{e.removeEventListener("load",n),e.removeEventListener("error",o)})),a.reject(r)}e=orDefault(e,[],"arr").filter((e=>"htmlimageelement"===Object.prototype.toString.call(e).slice(8,-1).toLowerCase())),r=orDefault(r,!1,"bool");const a=new Deferred,s=[];let i=e.length;return a.provision=1===e.length?e[0]:e,e.forEach((e=>{e.removeEventListener("load",n),e.addEventListener("load",n),e.removeEventListener("error",o),e.addEventListener("error",o);const r=e.src,a=e.parentNode,i=!!isA(e.parentNode,"htmlelement")&&"picture"===a.nodeName.toLowerCase();if(assert(!isEmpty(r),`Images:${t} | image has no src`),i||e.complete){let t;i?(window.respimage?(window.respimage({elements:[a]}),t=a.querySelector("img")):window.picturefill?(window.picturefill({elements:[a]}),t=a.querySelector("img")):t=e,t.complete?(t=new Image,t.addEventListener("load",n),t.addEventListener("error",o),t.src=r,s.push(t)):(t.removeEventListener("load",n),t.addEventListener("load",n),t.removeEventListener("error",o),t.addEventListener("error",o))):(t=new Image,t.addEventListener("load",n),t.addEventListener("error",o),t.src=r,s.push(t))}})),a}
//# sourceMappingURL=images.js.map
