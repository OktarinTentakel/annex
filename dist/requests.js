/*!
 * annex v0.1.0-dev
 */
/*!
 * Module Requests
 */
const MODULE_NAME="Requests";import{warn}from"./logging.js";import{hasValue,orDefault,isPlainObject,assert,Deferred}from"./basic.js";import{createNode,insertNode}from"./elements.js";import{schedule,countermand}from"./timers.js";export function createFetchRequest(e,t=null,n=!1){const r="createFetchRequest";return assert(hasValue(e),`Requests:${r} | no url given`),t=orDefault(t,{}),assert(isPlainObject(t),`Requests:${r} | options must be plain object`),t.method=orDefault(t.method,"GET","str"),t.method=["GET","POST","PUT","PATCH","HEAD","OPTIONS","DELETE"].includes(t.method.toUpperCase())?t.method.toUpperCase():"GET",t.timeout=orDefault(t.timeout,1e4,"int"),t.timeout=t.timeout<0?0:t.timeout,{url:e,options:t,execute:!n||"auto"===n&&!("fetch"in window)?function(){const n=new Deferred,r=new XMLHttpRequest,s=new Set,o=new Map,l=()=>({ok:parseInt(r.status,10)>=200&&parseInt(r.status,10)<=299,statusText:r.statusText,status:r.status,url:r.responseURL,text:()=>Promise.resolve(r.responseText),json:()=>Promise.resolve(r.responseText).then(JSON.parse),blob:()=>Promise.resolve(new Blob([r.response])),clone:l,headers:{keys:()=>s,entries:()=>o,get:e=>o.get(e),has:e=>s.has(e)}});if(r.open(t.method,e,!0),t.timeout>0&&(r.timeout=t.timeout,r.ontimeout=()=>{n.reject(new Error("timeout"))}),r.onload=()=>{r.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,((e,t,n)=>{t=`${t}`,s.add(t),o.has(t)?o.set(t,`${o.get(t)},${n}`):o.set(t,`${n}`)})),n.resolve(l())},r.onerror=n.reject,r.withCredentials="include"===t.credentials,hasValue(t.headers))for(let e in t.headers)t.headers.hasOwnProperty(e)&&r.setRequestHeader(e,t.headers[e]);return r.send(t.body??null),n}:function(){const n=new Deferred,r=t.timeout;let s,o;return r>0&&"AbortController"in window&&(o=new AbortController,t.signal=o.signal),window.fetch(e,t).then((e=>{countermand(s),n.resolve(e)})).catch((e=>{countermand(s),n.reject(e)})),r>0&&"AbortController"in window&&(s=schedule(r,(()=>{o.abort()}))),n}}}export function createJsonRequest(e,t=null,n=!1){return{url:e,options:t,execute(r="object",s=null,o=null){const l=new Deferred;return createFetchRequest(e,t,n).execute().then((e=>{const t=(e.headers.get("content-type")??e.headers.get("Content-Type")??"").split(";")[0].trim();return"application/json"!==t&&warn(`Requests:createJsonRequest | content-type "${t}" is not valid for JSON, use "application/json"`),e.json()})).then((e=>{const t=createNode(`<script type="application/json">${JSON.stringify(e)}<\/script>`);if(null!==o&&t.setAttribute("data-id",`${o}`),hasValue(s)){const e=s.element??s,n=s.position??null;null===n?insertNode(e,t):insertNode(e,t,n)}l.resolve("element"===r?t:"raw"===r?JSON.stringify(e):e)})).catch((e=>{l.reject(e)})),l}}}export function createJsRequest(e,t=null,n=!1){return{url:e,options:t,execute(r="element",s=null,o=null,l=!1){const a="sourced-element",u=new Deferred,c=(e,t="")=>{if(null!==o&&e.setAttribute("data-id",`${o}`),hasValue(s)){const n=s.element??s,o=s.position??null;l||(e.onload=()=>{u.resolve("raw"===r?t:e)},e.onerror=e=>{u.reject(e)}),null===o?insertNode(n,e):insertNode(n,e,o)}(r!==a||r===a&&l)&&u.resolve("raw"===r?t:e)};return r===a?c(createNode("script",{src:e})):createFetchRequest(e,t,n).execute().then((e=>{const t=(e.headers.get("content-type")??e.headers.get("Content-Type")??"").split(";")[0].trim();return"application/javascript"!==t&&warn(`Requests:createJsRequest | content-type "${t}" is not valid for JavaScript, use "application/javascript"`),e.text()})).then((e=>{c(createNode("script",null,e),e)})).catch((e=>{u.reject(e)})),u}}}export function createCssRequest(e,t=null,n=!1){return{url:e,options:t,execute(r="element",s=null,o=null,l="all",a=!1){const u="sourced-element",c=new Deferred,i=(e,t="")=>{if(null!==o&&e.setAttribute("data-id",`${o}`),hasValue(s)){const n=s.element??s,o=s.position??null;a||(e.onload=()=>{c.resolve("raw"===r?t:e)},e.onerror=e=>{c.reject(e)}),null===o?insertNode(n,e):insertNode(n,e,o)}(r!==u||r===u&&a)&&c.resolve("raw"===r?t:e)};if(r===u){const t={href:e,rel:"stylesheet"};"all"!==l&&(t.media=l),i(createNode("link",t))}else createFetchRequest(e,t,n).execute().then((e=>{const t=(e.headers.get("content-type")??e.headers.get("Content-Type")??"").split(";")[0].trim();return"text/css"!==t&&warn(`Requests:createCssRequest | content-type "${t}" is not valid for CSS, use "text/css"`),e.text()})).then((e=>{i(createNode("style","all"!==l?{media:l}:null,e),e)})).catch((e=>{c.reject(e)}));return c}}}export function createHtmlRequest(e,t=null,n=!1){return{url:e,options:t,execute(r="element",s=null,o=null,l=null,a=!1){const u=new Deferred;return createFetchRequest(e,t,n).execute().then((e=>{const t=(e.headers.get("content-type")??e.headers.get("Content-Type")??"").split(";")[0].trim();return"text/html"!==t&&warn(`Requests:createHtmlRequest | content-type "${t}" is not valid for HTML, use "text/html"`),e.text()})).then((e=>{const t=e.includes("<html")||e.includes("<HTML"),n=t||e.includes("<head")||e.includes("<HEAD")||e.includes("<body")||e.includes("<BODY"),c=(new DOMParser).parseFromString(e,"text/html").documentElement;let i;i=hasValue(l)?a?c.querySelectorAll(`${l}`):c.querySelector(`${l}`):t?c:n?c.children:c.querySelector("body").children,hasValue(i?.length)&&(i=0===i.length?null:1===i.length?i.item(0):Array.from(i)),hasValue(l)&&(e="",hasValue(i)&&[].concat(i).forEach((t=>{e+=t.outerHTML}))),((e,t="")=>{if(hasValue(e)){const t=[].concat(e);if(null!==o&&t.forEach((e=>{e.setAttribute("data-id",`${o}`)})),hasValue(s)){const e=s.element??s,n=s.position??null;["before","beforebegin","prepend","afterbegin"].includes(n)&&t.reverse(),t.forEach((t=>{null===n?insertNode(e,t):insertNode(e,t,n)}))}}u.resolve("raw"===r?t:e)})(i,e)})).catch((e=>{u.reject(e)})),u}}}
//# sourceMappingURL=requests.js.map
