{"version":3,"file":"polyfills.js","names":["MODULE_NAME","assert","hasValue","isFunction","orDefault","createFetchRequest","polyfillFetch","force","window","fetch","url","options","execute","polyfillElementMatches","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","polyfillCustomEvent","CustomEvent","event","params","bubbles","cancelable","detail","undefined","e","document","createEvent","initCustomEvent","Event","polyfillArrayAt","Array","at","Object","defineProperty","value","n","Math","trunc","this","length","writable","enumerable","configurable"],"sources":["polyfills.js"],"mappings":";;;AAQA,MAAMA,YAAc,mBAMZC,OAAQC,SAAUC,WAAYC,cAAgB,oBAC9CC,uBAAyB,uBA0B1B,SAASC,cAAcC,GAAM,KACnCA,EAAQH,UAAUG,GAAO,EAAO,UAElBJ,WAAWK,OAAOC,SAC/BD,OAAOC,MAAQ,SAASC,EAAKC,EAAQ,MACpC,OAAON,mBAAmBK,EAAKC,GAASC,SACzC,EAEF,QAqBO,SAASC,yBAGVC,QAAQC,UAAUC,UACtBF,QAAQC,UAAUC,QAAUF,QAAQC,UAAUE,mBAC1CH,QAAQC,UAAUG,uBAClB,MAILjB,OAAOC,SAASY,QAAQC,UAAUC,SAAU,8EAC7C,QAmBO,SAASG,sBACf,GAAIhB,WAAWK,OAAOY,aAAe,OAAO,EAE5C,MAAMA,EAAc,SAASC,EAAOC,GACnCA,EAASA,GAAU,CAACC,SAAU,EAAOC,YAAa,EAAOC,YAASC,GAClE,MAAMC,EAAIC,SAASC,YAAY,eAE/B,OADAF,EAAEG,gBAAgBT,EAAOC,EAAOC,QAASD,EAAOE,WAAYF,EAAOG,QAC5DE,CACR,EACAP,EAAYL,UAAYP,OAAOuB,MAAMhB,UAErCP,OAAOY,YAAcA,CACtB,QAoBO,SAASY,kBACf,GAAI7B,WAAW8B,MAAMlB,UAAUmB,IAAM,OAAO,EAE5CC,OAAOC,eAAeH,MAAMlB,UAAW,KAAM,CAC5CsB,MAAQ,SAASC,GAGhB,IAFAA,EAAIC,KAAKC,MAAMF,IAAM,GACb,IAAIA,GAAKG,KAAKC,UACjBJ,EAAI,GAAOA,GAAKG,KAAKC,QAC1B,OAAOD,KAAKH,EACb,EACAK,UAAW,EACXC,YAAa,EACbC,cAAe,GAEjB","ignoreList":[],"sourcesContent":["/*!\n * Module Polyfills\n */\n\n/**\n * @namespace Polyfills\n */\n\nconst MODULE_NAME = 'Polyfills';\n\n\n\n//###[ IMPORTS ]########################################################################################################\n\nimport {assert, hasValue, isFunction, orDefault} from './basic.js';\nimport {createFetchRequest} from './requests.js';\n\n\n\n//###[ EXPORTS ]########################################################################################################\n\n/**\n * @namespace Polyfills:polyfillFetch\n */\n\n/**\n * Polyfills window.fetch with a simple XMLHttpRequest-based implementation adapted from \"unfetch\", to provide\n * basic functionality with a compatible signature while keeping the source as small as possible.\n *\n * This polyfill should cover most basic use cases, but for complex cases you might need to polyfill something more\n * complete (for example Github's implementation: https://github.com/github/fetch).\n *\n * @param {?Boolean} [force=false] - if true, replaces a possibly present native implementation with the polyfill as well\n *\n * @memberof Polyfills:polyfillFetch\n * @alias polyfillFetch\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n * @see https://github.com/developit/unfetch\n * @example\n * polyfillFetch(true);\n */\nexport function polyfillFetch(force=false){\n\tforce = orDefault(force, false, 'bool');\n\n\tif( force || !isFunction(window.fetch) ){\n\t\twindow.fetch = function(url, options=null){\n\t\t\treturn createFetchRequest(url, options).execute();\n\t\t};\n\t}\n}\n\n\n\n/**\n * @namespace Polyfills:polyfillElementMatches\n */\n\n/**\n * Adds Element.matches support, if not already present in browser. Falls back to ms or mozilla implementations\n * if necessary.\n *\n * @throws error if Element.matches is not supported\n *\n * @memberof Polyfills:polyfillElementMatches\n * @alias polyfillElementMatches\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n * @example\n * polyfillElementMatches()\n * => makes Element.prototype.matches available, if not already present\n */\nexport function polyfillElementMatches(){\n\tconst __methodName__ = 'polyfillElementMatches';\n\n\tif( !Element.prototype.matches ){\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector\n\t\t\t?? Element.prototype.webkitMatchesSelector\n\t\t\t?? null\n\t\t;\n\t}\n\n\tassert(hasValue(Element.prototype.matches), `${MODULE_NAME}:${__methodName__} | browser does not support Element.matches`);\n}\n\n\n\n/**\n * @namespace Polyfills:polyfillCustomEvent\n */\n\n/**\n * Adds CustomEvent support, if not already present in browser. Falls back to manual implementation via\n * document.createEvent and event.initCustomEvent, if necessary.\n *\n * @memberof Polyfills:polyfillCustomEvent\n * @alias polyfillCustomEvent\n * @see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n * @example\n * polyfillCustomEvent()\n * => makes \"window.CustomEvent\" and \"new CustomEvent()\" available, if not already present\n */\nexport function polyfillCustomEvent(){\n\tif( isFunction(window.CustomEvent) ) return false;\n\n\tconst CustomEvent = function(event, params){\n\t\tparams = params ?? {bubbles : false, cancelable : false, detail : undefined};\n\t\tconst e = document.createEvent('CustomEvent');\n\t\te.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n\t\treturn e;\n\t};\n\tCustomEvent.prototype = window.Event.prototype;\n\n\twindow.CustomEvent = CustomEvent;\n}\n\n\n\n/**\n * @namespace Polyfills:polyfillArrayAt\n */\n\n/**\n * Adds support for Array.prototype.at, which is a fairly recent feature, compared to most other basic array\n * operations, resulting in even modern Chrome, Firefox and Safari versions not having implemented this.\n * But adding this is quite forward, it just being general array index access with possible negative index.\n *\n * @memberof Polyfills:polyfillArrayAt\n * @alias polyfillArrayAt\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at\n * @example\n * polyfillArrayAt()\n * => adds Array.prototype.at if not already defined\n */\nexport function polyfillArrayAt(){\n\tif( isFunction(Array.prototype.at) ) return false;\n\n\tObject.defineProperty(Array.prototype, 'at', {\n\t\tvalue : function(n){\n\t\t\tn = Math.trunc(n) || 0;\n\t\t\tif( n < 0 ) n += this.length;\n\t\t\tif( (n < 0) || (n >= this.length) ) return undefined;\n\t\t\treturn this[n];\n\t\t},\n\t\twritable : true,\n\t\tenumerable : false,\n\t\tconfigurable : true\n\t});\n}\n"]}